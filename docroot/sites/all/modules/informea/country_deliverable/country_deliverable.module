<?php
/**
 * @file
 * Code for the country_deliverable feature.
 */

define('ANALYTICS_INTEGRATION_FAOLEX', 'UA-16957842-1');
define('ANALYTICS_INTEGRATION_FAOLEX2', 'UA-16957552-1');
define('ANALYTICS_INTEGRATION_ECOLEX', 'UA-58379026-1');
define('ANALYTICS_INTEGRATION_UNEP', 'UA-59519586-13');

include_once 'country_deliverable.features.inc';


/**
 * Implements hook_menu().
 */
function country_deliverable_menu() {
  $items['informea/autocomplete/single/field_parent_national_report/node/%'] = array(
    'title' => 'Entity Reference Autocomplete',
    'page callback' => 'country_deliverable_autocomplete_field_parent_national_report_callback',
    'page arguments' => array(2, 3, 4, 5),
    'access callback' => 'entityreference_autocomplete_access_callback',
    'access arguments' => array(2, 3, 4, 5),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implement hook_theme().
 *
 * {@inheritdoc}
 */
function country_deliverable_theme() {
  return array(
    'country_deliverable_rod_cycle' => array(
      'render element' => 'element',
      'template' => 'templates/country-deliverable-rod-cycle',
      'variables' => array('cycle'),
      'path' => drupal_get_path('module', 'country_deliverable'),
    ),
  );
}

function country_deliverable_render_action_plans($rows) {
  $elements = array();
  foreach ($rows as $id => $row) {
    $rw = entity_metadata_wrapper('node', $row);
    $table_rows = array();
    foreach($row->action_plans as $report) {
      $nrw = entity_metadata_wrapper('node', $report);
      $date = $nrw->field_sorting_date->value();
      $date = !empty($date) ? format_date($date, 'short') : '';
      $files_field = field_view_field('node', $report, 'field_files', 'full');
      $files_field['#label_display'] = 'hidden';
      $table_rows[] = array(
        $report->title,
        array('data' => $date, 'class' => 'text-center'),
        array('data' => render($files_field), 'class' => 'text-center')
      );
    }
    $img = NULL;
    if ($row->type == 'country') {
      $img = theme('image', array(
        'path' => drupal_get_path('theme', 'informea_theme') . '/img/flags/flag-' . strtolower($rw->field_country_iso2->value()) . '.png',
        'attributes' => array('class' => array('flag-xs'))
      ));
    } else { // treaty
      $img = treaty_url_logo($row);
    }
    $header = (!empty($img) ? $img . ' ' : '') . $rw->label();
    $elements[$id] = array(
      'header' => $header,
      'body' => theme('table', array(
        'attributes' => array('class' => 'table-no-striping table-hover'),
        'rows' => $table_rows,
        'header' => array(
          t('Title'),
          array('data' => t('Submission date'), 'class' => array('col-sm-2 text-center text-nowrap')),
          array('data' => t('Files'), 'class' => array('col-sm-4 text-center'))
        )
      )),
    );
  }
  return array(
    '#type' => 'item', '#weight' => 10, '#markup' => theme('informea_bootstrap_collapse', array('id' => 'accordion', 'elements' => $elements, 'no-panel-body' => TRUE, 'no-data-parent' => TRUE, 'show-expand-button' => TRUE,)),
  );
}

function country_deliverable_render_national_reports($rows) {
  $elements = array();
  foreach ($rows as $id => $row) {
    $rw = entity_metadata_wrapper('node', $row);
    $table_rows = array();
    foreach($row->national_reports as $report) {
      $date_raw = field_get_items('node', $report, 'field_sorting_date');
      $date = !empty($date_raw[0]['value']) ? format_date(strtotime($date_raw[0]['value']), 'short') : '';
      $title = field_get_items('node', $report, 'title_field');
      $files_field = field_view_field('node', $report, 'field_files', 'full');
      $files_field['#label_display'] = 'hidden';
      $target = field_get_items('node', $report, 'field_document_url');
      if (!empty($target[0]['url'])) {
        $col0 = l($title[0]['safe_value'], $target[0]['url'], array('attributes' => array('target' => '_blank')));
      }
      else {
        $col0 = $title[0]['safe_value'];
      }
      $table_rows[] = array(
        array('data' => $col0, 'class' => 'title'),
        array('data' => $date, 'class' => 'text-center'),
        array('data' => render($files_field))
      );
    }
    $img = NULL;
    if ($row->type == 'country') {
      $img = theme('image', array(
        'path' => drupal_get_path('theme', 'informea_theme') . '/img/flags/flag-' . strtolower($rw->field_country_iso2->value()) . '.png',
        'attributes' => array('class' => array('flag-xs'))
      ));
    } else { // treaty
      if ($uri = $rw->field_logo->value()['uri']) {
        $img = treaty_url_logo($row);
      }
    }
    $header = (!empty($img) ? $img . ' ' : '') . $rw->label();
    $elements[$id] = array(
      'header' => $header,
      'body' => theme('table', array(
        'attributes' => array('class' => 'table-no-striping table-hover'),
        'rows' => $table_rows,
        'header' => array(
          t('Title'),
          array('data' => t('Submission date'), 'class' => array('col-sm-2 text-center text-nowrap')),
          array('data' => t('Files'), 'class' => array('col-sm-4 text-center'))
        )
      )),
    );
  }
  return array(
    '#type' => 'item',
    '#weight' => 50,
    '#markup' => theme('informea_bootstrap_collapse', array(
      'id' => 'accordion',
      'elements' => $elements,
      'no-panel-body' => TRUE,
      'no-data-parent' => TRUE,
      'show-expand-button' => TRUE,
      'show-filter-input' => TRUE
    ))
  );
}

function country_deliverable_render_rod($id_treaty, $rows) {
  $ret = array();
  if (!empty($rows)) {
    $ret[] = array(
      '#type' => 'item',
      '#weight' => 5,
      '#markup' => t('Reporting obligations'),
      '#prefix' => '<h2>',
      '#suffix' => '</h2>'
    );
    $w = entity_metadata_wrapper('node', $id_treaty);
    $articles = $w->field_treaty_article->value();
    if (!empty($articles)) {
      $article = current($articles);
      $aw = entity_metadata_wrapper('node', $article);
      $official_order = $aw->field_official_order->value();
      if ($official_order) {
        $official_order = strpos($official_order, '.') > 0 ? $official_order : $official_order . '.';
        $msg1 = t('The reporting obligation stems from <em>Article !number !title</em>', array(
          '!number' => $official_order,
          '!title' => $aw->label()
        ));
      }
      else {
        $msg1 = t('The reporting obligation stems from Article !title', array('!title' => $aw->label()));
      }
      $ret[] = array(
        '#type' => 'item',
        '#weight' => 5,
        '#markup' => $msg1,
        '#prefix' => '<p class="article-stem">',
        '#suffix' => '</p>'
      );
    }
    $paragraphs = $w->field_treaty_article_paragraph->value();
    if (!empty($paragraphs)) {
      foreach ($paragraphs as $i => $p) {
        $vf = field_view_field('node', $p, 'body', 'full');
        $ret[] = array(
          '#type' => 'item',
          '#weight' => 8 + (++$i),
          '#markup' => render($vf),
          '#prefix' => '<em class="paragraph-stem">',
          '#suffix' => '</em>'
        );
      }
    }

    $render_rows = array();
    foreach ($rows as $id => $row) {
      $rw = entity_metadata_wrapper('node', $row);
      $render_rows[$id] = array(
        'header' => $rw->label(),
        'body' => theme('country_deliverable_rod_cycle', array('cycle' => $row))
      );
    }
    $ret[] = array(
      '#type' => 'item', '#weight' => 30, '#markup' => theme('informea_bootstrap_collapse', array('id' => 'reporting-cycles', 'elements' => $render_rows, 'show-expand-button' => TRUE,)),
    );
  }
  return $ret;
}


function country_deliverable_form_national_report_paragraph_node_form_alter(&$form, $form_state) {
  // Use custom autocomplete for field to show the national report list
  if (!empty($form['field_parent_national_report'][LANGUAGE_NONE]['#autocomplete_path'])) {
    $bundle = $form['#node']->type;
    /** @see country_deliverable_autocomplete_field_parent_national_report_callback */
    $autocomplete_path = "informea/autocomplete/single/field_parent_national_report/node/$bundle/";
    $autocomplete_path .= !empty($form['#node']->nid) ? $form['#node']->nid : 'NULL';
    $form['field_parent_national_report'][LANGUAGE_NONE]['#autocomplete_path'] = $autocomplete_path;
  }
}

function country_deliverable_autocomplete_field_parent_national_report_callback($type, $field_name, $entity_type, $bundle_name, $entity_id = '', $string = '') {
  $q = db_select('node', 'a')->fields('a', array('nid', 'title'));
  $q->condition('a.type', 'national_report');
  $q->condition('a.title', '%' . $string . '%', 'LIKE');
  $q->orderBy('a.title');
  $q->range(0, 10);
  $matches = array();
  foreach ($q->execute()->fetchAllAssoc('nid') as $nid => $row) {
    $treaty_title = '';
    try {
      $w = entity_metadata_wrapper('node', $nid);
      $treaty = $w->field_treaty->value();
      if ($treaty = reset($treaty)) {
        $treaty_title = ' (' . $treaty->title . ')';
      }
    } catch (Exception $e) {}

    $key = "{$row->title} ($nid)";
    // Strip things like starting/trailing white spaces, line breaks and tags.
    $key = preg_replace('/\s\s+/', ' ', str_replace("\n", '', trim(decode_entities(strip_tags($key)))));
    // Names containing commas or quotes must be wrapped in quotes.
    if (strpos($key, ',') !== FALSE || strpos($key, '"') !== FALSE) {
      $key = '"' . str_replace('"', '""', $key) . '"';
    }
    $matches[$key] = '<div class="reference-autocomplete">' . $treaty_title . '<b>' . $row->title . '</b></div>';
  }
  drupal_json_output($matches);
}

/**
 * Implements hook_node_view().
 */
/**
 * Implements hook_page_alter().
 */
function country_deliverable_page_alter(&$page) {
  if (arg(0) == 'node' && module_exists('analytics_integration')) {
    if ($node = node_load(arg(1))) {
      $node_w = entity_metadata_wrapper('node', $node);
      switch ($node->type) {
        case 'legislation':
          $original_id = $node_w->field_original_id->value();
          if (!empty($original_id)) {
            $url = informea_ecolex_legislation_link($node->nid);
            analytics_integration_google_analytics_send_hit(ANALYTICS_INTEGRATION_ECOLEX, $url, 'ecolex', $node_w->label());
          }
          country_deliverable_google_analytics_faolex_send_hit($node, $node_w->label());
          break;

        case 'literature':
          $url = informea_ecolex_literature_link($node->nid);
          analytics_integration_google_analytics_send_hit(ANALYTICS_INTEGRATION_ECOLEX, $url, 'ecolex', $node_w->label());
          break;

        case 'treaty':
          $data_source = $node_w->field_data_source->value();
          if (!empty($data_source) && $data_source[0]->tid == DATA_SOURCE_ECOLEX) {
            $url = informea_ecolex_treaty_link($node->nid);
            analytics_integration_google_analytics_send_hit(ANALYTICS_INTEGRATION_ECOLEX, $url, 'ecolex', $node_w->label());
          }
          break;
      }
    }
  }
}

function country_deliverable_google_analytics_faolex_send_hit($node, $title) {
  $url = informea_faolex_legislation_link($node->nid);
  analytics_integration_google_analytics_send_hit(ANALYTICS_INTEGRATION_FAOLEX, $url, 'faolex', $title);
  analytics_integration_google_analytics_send_hit(ANALYTICS_INTEGRATION_FAOLEX2, $url, 'faolex2', $title);
}
